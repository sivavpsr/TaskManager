{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/model/task/task.module.ts","webpack:///./src/app/pipe/task/filter.pipe.ts","webpack:///./src/app/services/taskmanager.service.ts","webpack:///./src/app/ui/addtask/addtask.component.css","webpack:///./src/app/ui/addtask/addtask.component.html","webpack:///./src/app/ui/addtask/addtask.component.ts","webpack:///./src/app/ui/edittask/edittask.component.css","webpack:///./src/app/ui/edittask/edittask.component.html","webpack:///./src/app/ui/edittask/edittask.component.ts","webpack:///./src/app/ui/viewtask/confirmationdialog.component.html","webpack:///./src/app/ui/viewtask/viewtask.component.css","webpack:///./src/app/ui/viewtask/viewtask.component.html","webpack:///./src/app/ui/viewtask/viewtask.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ViewtaskComponent } from './ui/viewtask/viewtask.component';\nimport { AddtaskComponent } from './ui/addtask/addtask.component';\nimport { EdittaskComponent } from './ui/edittask/edittask.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/viewtask', pathMatch: 'full' },\n  { path: 'viewtask', component: ViewtaskComponent },\n  { path: 'addtask', component: AddtaskComponent },\n  { path: 'edittask/:id', component: EdittaskComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  //title = 'TaskManagerUI';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddtaskComponent } from './ui/addtask/addtask.component';\nimport { ViewtaskComponent, ConfirmationDialog } from './ui/viewtask/viewtask.component';\nimport { EdittaskComponent } from './ui/edittask/edittask.component';\nimport { FilterPipe } from './pipe/task/filter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddtaskComponent,\n    ViewtaskComponent,\n    EdittaskComponent,\n    ConfirmationDialog,\n    FilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModalModule,\n    AppRoutingModule\n  ],\n  entryComponents:[\n    ConfirmationDialog\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class TaskModule {\n  TaskId: number;\n  TaskDescription: string;\n  ParentTaskId: number;\n  ParentTaskDescription: string;\n  Priority: number;\n  StartDate: Date;\n  EndDate: Date;\n  Completed: boolean;\n }\n\n export class TaskSearchModule {\n  TaskDescription: string;\n  ParentTaskDescription: string;\n  PriorityFrom: string;\n  PriorityTo: string;\n  StartDate: Date;\n  EndDate: Date;\n }\n\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TaskModule, TaskSearchModule } from '../../model/task/task.module';\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: TaskModule[], args?: TaskSearchModule): TaskModule[] {\n\n    if (value == null)\n      return null;\n\n    let result = value.filter(task => {\n\n      return ( \n\n        (args.TaskDescription == undefined || args.TaskDescription == \"\" || task.TaskDescription.toLowerCase().includes(args.TaskDescription))\n\n        && (args.ParentTaskDescription == undefined || args.ParentTaskDescription == \"\" || task.ParentTaskDescription.toLowerCase().includes(args.ParentTaskDescription))\n\n        && (args.PriorityFrom == undefined || args.PriorityFrom == \"\" || task.Priority >= parseInt(args.PriorityFrom))\n\n        && (args.PriorityTo == undefined || args.PriorityTo == \"\" || task.Priority <= parseInt(args.PriorityTo))\n\n        && (args.StartDate == undefined || task.StartDate >= args.StartDate)\n\n        && (args.EndDate == undefined || task.EndDate <= args.EndDate)\n      )\n\n    });\n\n    return result;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http'\nimport { observable, of, Observable } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { TaskModule } from '../model/task/task.module';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TaskmanagerService {\n\n  readonly endpoint = \"http://localhost:81/api/taskmanager\" ;\n\n  constructor(private http: HttpClient) {    \n  }\n\n  // get all the tasks\n  getAllTasks(): Observable<TaskModule[]> {\n    return this.http.get(this.endpoint + '/getalltasks').pipe(map((response: TaskModule[])  => { return response; }) );\n  }\n\n  // get the task details by id\n  getTaskById(id): Observable<TaskModule> {\n    return this.http.get(this.endpoint + '/gettaskbyid/' + id).pipe(map((response: TaskModule)  => { return response; }) );\n  }\n\n  // get the tasks for parent task dropdown\n  getParentTasks(id): Observable<TaskModule[]> {\n    return this.http.get(this.endpoint + '/getparenttasks/' + id).pipe(map((response: TaskModule[])  => { return response; }) );\n  }\n\n  // save the task (add, edit)\n  saveTask(task: TaskModule): Observable<boolean> {\n    return this.http.post(this.endpoint + '/save', task).pipe(map((response: boolean) => { return response; }));\n  }\n\n  // complete the task for the given id\n  completeTask(id): Observable<boolean> {\n    return this.http.post(this.endpoint + '/completetask', { \"TaskId\": id }).pipe(map((response: boolean) => { return response; }));\n  }\n\n  // delete the task for the given id\n  deleteTask(id): Observable<boolean> {\n    return this.http.delete(this.endpoint + '/deletetask/' + id).pipe(map((response: boolean) => { return response; }));\n  }  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2FkZHRhc2svYWRkdGFzay5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 offset-3\\\">\\n        <h5>Add Task</h5>\\n\\n        <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"taskDescription\\\" class=\\\"control-label\\\">Task Description</label>\\n            <div [ngClass]=\\\"{ 'has-error': submitted && f.TaskDescription.errors }\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"TaskDescription\\\" maxlength=\\\"80\\\" />\\n            </div>\\n            <div *ngIf=\\\"submitted && f.TaskDescription.errors\\\" class=\\\"has-error\\\">\\n              <span class=\\\"help-block\\\" *ngIf=\\\"f.TaskDescription.errors.required\\\">Task Description is required</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"parentTask\\\" class=\\\"control-label\\\">Parent Task</label>\\n            <select class=\\\"select-option form-control\\\" formControlName=\\\"ParentTaskId\\\">\\n              <option class=\\\"option\\\" value=\\\"\\\"></option>\\n              <option class=\\\"option\\\" *ngFor=\\\"let ptask of ParentTasks\\\" [value]=\\\"ptask.TaskId\\\">{{ ptask.TaskDescription }}</option>\\n            </select>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"priority\\\" class=\\\"control-label\\\">Priority</label>\\n            <div>\\n              <input type=\\\"range\\\" min=\\\"1\\\" max=\\\"30\\\" formControlName=\\\"Priority\\\" />\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"startDate\\\" class=\\\"control-label\\\">Start Date</label>\\n            <div [ngClass]=\\\"{ 'has-error': submitted && f.StartDate.errors }\\\">\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"StartDate\\\" />\\n            </div>\\n            <div *ngIf=\\\"submitted && f.StartDate.errors\\\" class=\\\"has-error\\\">\\n              <span class=\\\"help-block\\\" *ngIf=\\\"f.StartDate.errors.required\\\">Start Date is required</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"endDate\\\" class=\\\"control-label\\\">End Date</label>\\n            <div [ngClass]=\\\"{ 'has-error': submitted && f.EndDate.errors }\\\">\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"EndDate\\\" value=\\\"\\\" />\\n            </div>\\n            <div *ngIf=\\\"submitted && f.EndDate.errors\\\" class=\\\"has-error\\\">\\n              <span class=\\\"help-block\\\" *ngIf=\\\"f.EndDate.errors.required\\\">End Date is required</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <button class=\\\"btn btn-primary\\\">Submit</button>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" *ngIf=\\\"submitted && !status\\\" >\\n            <span class=\\\"has-error help-block\\\"> {{ error }} </span>\\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Route, Router } from '@angular/router';\n\nimport { TaskModule } from 'src/app/model/task/task.module';\nimport { TaskmanagerService } from '../../services/taskmanager.service';\nimport { ROUTER_PROVIDERS } from '@angular/router/src/router_module';\n\n@Component({\n  selector: 'app-addtask',\n  templateUrl: './addtask.component.html',\n  styleUrls: ['./addtask.component.css']\n})\n\nexport class AddtaskComponent implements OnInit {\n\n  public Task: TaskModule;\n  public ParentTasks: TaskModule[];\n\n  addForm: FormGroup;\n  submitted: boolean = false;\n  status: boolean;\n  error: string;\n  parentTaskId: number;\n\n  constructor(private taskService: TaskmanagerService,\n    private route: Router) {\n  }\n\n  ngOnInit() {\n    this.Task = new TaskModule();\n\n    // get the parent tasks\n    this.taskService.getParentTasks(0).subscribe(result => this.ParentTasks = result);\n\n    // new object\n    this.addForm = new FormGroup({\n      TaskDescription: new FormControl('', Validators.required),\n      ParentTaskId: new FormControl(''),\n      Priority: new FormControl('10'),\n      StartDate: new FormControl('', Validators.required),\n      EndDate: new FormControl('', Validators.required)\n    });\n  }\n\n  get f() { return this.addForm.controls; }\n\n\n  onSubmit() {\n\n    this.submitted = true;\n\n    if (this.addForm.invalid) {\n      return;\n    }\n\n    this.Task.TaskDescription = this.addForm.get('TaskDescription').value;\n    this.Task.ParentTaskId = this.addForm.get('ParentTaskId').value;\n    this.Task.Priority = this.addForm.get('Priority').value;\n    this.Task.StartDate = this.addForm.get('StartDate').value;\n    this.Task.EndDate = this.addForm.get('EndDate').value;\n\n    this.taskService.saveTask(this.Task).subscribe(result => {\n      if (result) {\n        this.route.navigate(['/viewtask']);\n      }\n      else {\n        this.error = \"Error while saving the task\";\n      }\n    });\n\n    return;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2VkaXR0YXNrL2VkaXR0YXNrLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-3\\\">\\n          <h5>Edit Task</h5>\\n  \\n          <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"taskDescription\\\" class=\\\"control-label\\\">Task Description</label>\\n              <div [ngClass]=\\\"{ 'has-error': submitted && f.TaskDescription.errors }\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"TaskDescription\\\" maxlength=\\\"80\\\" />\\n              </div>\\n              <div *ngIf=\\\"submitted && f.TaskDescription.errors\\\" class=\\\"has-error\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"f.TaskDescription.errors.required\\\">Task Description is required</span>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"parentTask\\\" class=\\\"control-label\\\">Parent Task</label>\\n              <select class=\\\"select-option form-control\\\" formControlName=\\\"ParentTaskId\\\">\\n                <option class=\\\"option\\\" value=\\\"\\\"></option>\\n                <option class=\\\"option\\\" *ngFor=\\\"let ptask of ParentTasks\\\" [value]=\\\"ptask.TaskId\\\">{{ ptask.TaskDescription }}</option>\\n              </select>\\n            </div>\\n  \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"priority\\\" class=\\\"control-label\\\">Priority</label>\\n              <div>\\n                <input type=\\\"range\\\" min=\\\"1\\\" max=\\\"30\\\" formControlName=\\\"Priority\\\" />\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"startDate\\\" class=\\\"control-label\\\">Start Date</label>\\n              <div [ngClass]=\\\"{ 'has-error': submitted && f.StartDate.errors }\\\">\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"StartDate\\\" />\\n              </div>\\n              <div *ngIf=\\\"submitted && f.StartDate.errors\\\" class=\\\"has-error\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"f.StartDate.errors.required\\\">Start Date is required</span>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"endDate\\\" class=\\\"control-label\\\">End Date</label>\\n              <div [ngClass]=\\\"{ 'has-error': submitted && f.EndDate.errors }\\\">\\n                <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"EndDate\\\" value=\\\"\\\" />\\n              </div>\\n              <div *ngIf=\\\"submitted && f.EndDate.errors\\\" class=\\\"has-error\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"f.EndDate.errors.required\\\">End Date is required</span>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group\\\">\\n              <button class=\\\"btn btn-primary\\\">Submit</button>\\n            </div>\\n  \\n            <div class=\\\"form-group\\\" *ngIf=\\\"submitted && !status\\\" >\\n              <span class=\\\"has-error help-block\\\"> {{ error }} </span>\\n            </div>\\n  \\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Route, Router, ActivatedRoute } from '@angular/router';\nimport { formatDate } from '@angular/common'\n\nimport { TaskModule } from 'src/app/model/task/task.module';\nimport { TaskmanagerService } from '../../services/taskmanager.service';\nimport { ROUTER_PROVIDERS } from '@angular/router/src/router_module';\n\n\n@Component({\n  selector: 'app-edittask',\n  templateUrl: './edittask.component.html',\n  styleUrls: ['./edittask.component.css']\n})\nexport class EdittaskComponent implements OnInit {\n\n  public Task: TaskModule;\n  public ParentTasks: TaskModule[];\n\n  editForm: FormGroup;\n  submitted: boolean = false;\n  status: boolean;\n  error: string;\n  parentTaskId: number;\n  taskId: number;\n\n  constructor(private taskService: TaskmanagerService,\n    private route: Router,\n    private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.Task = new TaskModule();\n\n    // new object\n    this.editForm = new FormGroup({\n      TaskDescription: new FormControl('', Validators.required),\n      ParentTaskId: new FormControl(''),\n      Priority: new FormControl(10),\n      StartDate: new FormControl('', Validators.required),\n      EndDate: new FormControl('', Validators.required)\n    });\n\n    this.activatedRoute.params.subscribe(params => {\n      this.taskId = params['id'];\n      this.Task.TaskId = this.taskId;\n    })\n\n    // get the parent tasks\n    this.taskService.getParentTasks(this.taskId).subscribe(result => this.ParentTasks = result);\n\n    // get the task details by id\n    this.taskService.getTaskById(this.taskId).subscribe(\n      result => {\n\n        this.Task = result;\n\n        this.editForm.patchValue({\n          TaskDescription: this.Task.TaskDescription,\n          ParentTaskId: this.Task.ParentTaskId,\n          Priority: this.Task.Priority,\n          StartDate: formatDate(this.Task.StartDate, 'yyyy-MM-dd', 'en-US'),\n          EndDate: formatDate(this.Task.EndDate, 'yyyy-MM-dd', 'en-US')\n        });\n      }\n    );\n  }\n\n  get f() { return this.editForm.controls; }\n\n\n  onSubmit() {\n\n    this.submitted = true;\n\n    if (this.editForm.invalid) {\n      return;\n    }\n\n    this.Task.TaskDescription = this.editForm.get('TaskDescription').value;\n    this.Task.ParentTaskId = this.editForm.get('ParentTaskId').value;\n    this.Task.Priority = this.editForm.get('Priority').value;\n    this.Task.StartDate = this.editForm.get('StartDate').value;\n    this.Task.EndDate = this.editForm.get('EndDate').value;\n\n    this.taskService.saveTask(this.Task).subscribe(result => {\n      if (result) {\n        this.route.navigate(['/viewtask']);\n      }\n      else {\n        this.error = \"Error while saving the task\";\n      }\n    });\n\n    return;\n  }\n}\n","module.exports = \"\\r\\n<!-- confirmation dialog -->\\r\\n<div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Confirmation</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('x')\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label\\\"> {{ confirmationMessage }} </label>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"label\\\"> {{ taskDescription }} </label>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"activeModal.close('Yes')\\\">Yes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"activeModal.close('No')\\\">No</button>\\r\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL3ZpZXd0YXNrL3ZpZXd0YXNrLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h5>View Tasks</h5>\\n\\n<p>\\n  <a href=\\\"/addtask\\\">Add Task</a>\\n</p>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-6\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"taskDescription\\\" class=\\\"control-label\\\">Task</label>\\n      <input type=\\\"text\\\" name=\\\"taskDescription\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchTask.TaskDescription\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"col-6\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"parentTaskDescription\\\" class=\\\"control-text\\\">Parent Task</label>\\n      <input type=\\\"text\\\" name=\\\"parentTaskDescription\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchTask.ParentTaskDescription\\\">\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-3\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"priorityFrom\\\" class=\\\"control-text\\\">Priority From</label>\\n      <input type=\\\"text\\\" name=\\\"priorityFrom\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchTask.PriorityFrom\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"col-3\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"priorityTo\\\" class=\\\"control-text\\\">Priority To</label>\\n      <input type=\\\"text\\\" name=\\\"priorityTo\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchTask.PriorityTo\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"col-3\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"startDate\\\" class=\\\"control-text\\\">Start Date</label>\\n      <input type=\\\"date\\\" name=\\\"startDate\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchTask.StartDate\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"col-3\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"endDate\\\" class=\\\"control-text\\\">End Date</label>\\n      <input type=\\\"date\\\" name=\\\"endDate\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchTask.EndDate\\\">\\n    </div>\\n  </div>\\n</div>\\n<br />\\n<table class=\\\"table table-responsive-sm\\\">\\n  <thead>\\n    <tr>\\n      <th class=\\\"w-20\\\">\\n        Task\\n      </th>\\n      <th class=\\\"w-20\\\">\\n        Parent Task\\n      </th>\\n      <th class=\\\"w-10\\\">\\n        Priority\\n      </th>\\n      <th class=\\\"w-10\\\">\\n        Start Date\\n      </th>\\n      <th class=\\\"w-10\\\">\\n        End Date\\n      </th>\\n      <th></th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let task of Tasks | filter:searchTask\\\">\\n      <td>{{ task.TaskDescription }}</td>\\n      <td>{{ task.ParentTaskDescription }}</td>\\n      <td>{{ task.Priority }}</td>\\n      <td>{{ task.StartDate | date: 'dd/MM/yyyy' }}</td>\\n      <td>{{ task.EndDate | date: 'dd/MM/yyyy' }}</td>\\n      <td>\\n        <div *ngIf=\\\"!task.Completed\\\">\\n          <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"editTask(task.TaskId)\\\">Edit</button>\\n          | <button class=\\\"btn btn-sm btn-success\\\" (click)=\\\"completeTask(task.TaskId)\\\">Complete</button>\\n          | <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"deleteTask(task.TaskId)\\\">Delete</button>\\n        </div>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { TaskModule, TaskSearchModule } from '../../model/task/task.module';\nimport { TaskmanagerService } from '../../services/taskmanager.service';\n\nimport { NgbModal, NgbActiveModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'ngbd-modal-content',\n  templateUrl: './confirmationdialog.component.html'\n})\n\nexport class ConfirmationDialog implements OnInit {\n\n  @Input() confirmationMessage;\n  @Input() taskDescription;\n\n  ngOnInit() {\n  }\n\n  constructor(public activeModal: NgbActiveModal) { }\n}\n\n\n@Component({\n  selector: 'app-viewtask',\n  templateUrl: './viewtask.component.html',\n  styleUrls: ['./viewtask.component.css'],\n  entryComponents: [ConfirmationDialog]\n})\n\nexport class ViewtaskComponent implements OnInit {\n\n  constructor(private taskService: TaskmanagerService,\n    private route: Router,\n    private modalService: NgbModal) { }\n\n  Tasks: TaskModule[];\n  confirmationMessage: string;\n  taskId: number;\n  taskDescription: string;\n  filteredTask: TaskModule[];\n  showDialog: boolean;\n  closeResult: string;\n  errorMessage: string;\n\n  searchTask: TaskSearchModule;\n\n  ngOnInit() {\n    this.searchTask = new TaskSearchModule();\n    this.getAllTasks();    \n  }\n\n  getAllTasks() {\n    this.taskService.getAllTasks().subscribe(result => this.Tasks = result);\n  }\n\n  editTask(id: number) {\n    this.route.navigate(['/edittask/' + id]);\n  }\n\n  completeTask(id: number) {\n    this.taskId = id;\n    this.filteredTask = this.Tasks.filter(t => t.TaskId == this.taskId);\n    this.taskDescription = this.filteredTask[0].TaskDescription;\n    this.confirmationMessage = \"Are you sure to complete the task ?\";\n    this.closeResult = \"\";\n\n    const modalRef = this.modalService.open(ConfirmationDialog, { ariaLabelledBy: 'modal-basic-title' });\n    modalRef.componentInstance.confirmationMessage = this.confirmationMessage;\n    modalRef.componentInstance.taskDescription = this.taskDescription;\n\n    modalRef.result.then((result) => {\n\n      this.closeResult = result;\n\n      if (this.closeResult == \"Yes\") {\n        this.taskService.completeTask(this.taskId).subscribe(response => {\n          if (response) {\n            this.getAllTasks();\n          }\n          else {\n            this.errorMessage = \"Error while saving data\";\n          }\n        })\n      }\n    }, (reason) => {\n      this.closeResult = reason;\n    })\n  }\n\n  deleteTask(id: number) {\n    this.taskId = id;\n    this.filteredTask = this.Tasks.filter(t => t.TaskId == this.taskId);\n    this.taskDescription = this.filteredTask[0].TaskDescription;\n    this.confirmationMessage = \"Are you sure to delete the task ?\";\n    this.closeResult = \"\";\n\n    const modalRef = this.modalService.open(ConfirmationDialog, { ariaLabelledBy: 'modal-basic-title' });\n    modalRef.componentInstance.confirmationMessage = this.confirmationMessage;\n    modalRef.componentInstance.taskDescription = this.taskDescription;\n\n    modalRef.result.then((result) => {\n      this.closeResult = result;\n\n      if (this.closeResult == \"Yes\") {\n        this.taskService.deleteTask(this.taskId).subscribe(result => {\n          if (result) {\n            this.getAllTasks();\n          }\n          else {\n            this.errorMessage = \"Error while saving data\";\n          }\n        })\n      }\n    }, (reason) => {\n      this.closeResult = reason;\n    })\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}